#!/usr/bin/env node

var exists = require('fs').existsSync
var join = require('path').join
var logger = require('../lib/logger')
var program = require('commander')
var resolve = require('path').resolve
var spawn = require('child_process').spawn
var stat = require('fs').statSync

program
    .version(require('../package').version)
    .usage('<command> [options]')

program.on('--help', () => {
    console.log()
    console.log('  Commands:')
    console.log()
    console.log('    init        generate a new project from a template')
    console.log('    list        list available official templates')
    console.log()
})
// console.log(process.argv, 222)
program.parse(process.argv)
if (!program.args.length) program.help()

var cmd = program.args[0]
var args = process.argv.slice(3)
var name = 'vsharp-' + cmd
var bin = join(__dirname, name)
if (!exists(bin)) {
    bin = process.env.PATH.split(':').reduce(function (binary, path) {
        path = resolve(path, bin)
        return exists(path) && stat(path).isFile() ? path : binary
    }, bin)
}

if (!exists(bin)) {
    logger.fatal('The "%s" command does not exist.', name)
}
if (process.platform === "win32") {
    spawn(name + '.cmd', args, {stdio: 'inherit'}).on('close', (code) => {
        console.log(`子进程退出 cmd，退出码 ${code}`)
    })
} else {
    spawn(bin, args, {stdio: 'inherit'}).on('close', (code) => {
        console.log(`子进程退出 sh，退出码 ${code}`)
    })
 }